[{"C:\\Users\\italo\\Desktop\\netflixclone\\src\\index.js":"1","C:\\Users\\italo\\Desktop\\netflixclone\\src\\App.js":"2","C:\\Users\\italo\\Desktop\\netflixclone\\src\\Tmdb.js":"3","C:\\Users\\italo\\Desktop\\netflixclone\\src\\components\\MovieRow.js":"4","C:\\Users\\italo\\Desktop\\netflixclone\\src\\components\\FeaturedMovie.js":"5","C:\\Users\\italo\\Desktop\\netflixclone\\src\\components\\Header.js":"6"},{"size":199,"mtime":1644170386244,"results":"7","hashOfConfig":"8"},{"size":1903,"mtime":1644339065292,"results":"9","hashOfConfig":"8"},{"size":2792,"mtime":1644250373708,"results":"10","hashOfConfig":"8"},{"size":772,"mtime":1644423932778,"results":"11","hashOfConfig":"8"},{"size":1681,"mtime":1644258403555,"results":"12","hashOfConfig":"8"},{"size":692,"mtime":1644336609744,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"p0sjd4",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"17"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"17"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"17"},"C:\\Users\\italo\\Desktop\\netflixclone\\src\\index.js",[],[],["37","38"],"C:\\Users\\italo\\Desktop\\netflixclone\\src\\App.js",["39"],[],"import React, { useEffect, useState} from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setfeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(()=>{\n    const loadAll = async () => {\n      // pegando lista total\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      // Pegando o Featured\n      let originals = list.filter(i=>i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length -1));\n      let chosen = originals = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      console.log(chosenInfo);\n      setfeaturedData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n\n\n  useEffect(()=>{\n    const scrollListener = () => {\n      if(window.scrollY > 10) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n    window.removeEventListener('scroll', scrollListener);\n    }\n  }, []);\n\n\n    return (\n      <div className=\"page\">\n\n      <Header black={blackHeader} />\n\n\n      {featuredData &&\n        <FeaturedMovie item={featuredData} />\n      }\n\n        <section className=\"lists\">\n          {movieList.map((item, key)=>(\n            <MovieRow key={key} title={item.title} items={item.items} />\n          ))}\n        </section>\n\n        <footer>\n          Feito com <span role=\"img\" aria-label=\"coração\">❤️</span><br/>\n          Direitos de imagem para Netflix<br/>\n          Dados pegos do site Themoviedb.org\n        </footer>\n      </div>\n    );\n  }","C:\\Users\\italo\\Desktop\\netflixclone\\src\\Tmdb.js",["40"],[],"const API_KEY = 'ab88313f624d20e80c91aab3f26f010f';\r\nconst APE_BASE = 'https://api.themoviedb.org/3';\r\n\r\n/*\r\n- originais da netflix\r\n- recomendados (trending)\r\n- em alta (top rate)\r\n- ação\r\n- comédia\r\n- terror\r\n- romance\r\n- documentarios\r\n*/\r\n\r\n    const basicFetch = async (endpoint) => {\r\n        const req = await fetch(`${APE_BASE}${endpoint}`);\r\n        const json = await req.json();\r\n        return json;\r\n    }\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return[\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=123&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para Você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentarios',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ];\r\n    },\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n\r\n        if(movieId) {\r\n            switch(type) {\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                \r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                break;\r\n                default:\r\n                    info = null;\r\n                break;\r\n            }\r\n        }\r\n\r\n\r\n        return info;\r\n    }\r\n}\r\n","C:\\Users\\italo\\Desktop\\netflixclone\\src\\components\\MovieRow.js",["41"],[],"C:\\Users\\italo\\Desktop\\netflixclone\\src\\components\\FeaturedMovie.js",["42"],[],"import React from 'react'\r\nimport './FeaturedMovie.css'\r\n\r\nexport default ({item}) => {\r\n    console.log(item);\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = [];\r\n    for( let i in item.genres) {\r\n        genres.push( item.genres[i].name);\r\n    }\r\n\r\n    return (\r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item.original_name}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item.vote_average}pontos</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons}Temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n                    </div>\r\n                    <div className=\"featured--description\">{item.overview}</div>\r\n                    <div className=\"featured--buttons\">\r\n                        <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">▶ Assistir</a>\r\n                        <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n                    </div>\r\n                    <div className=\"featured--generes\"><strong>Gêneros:</strong> {genres.join(', ')}</div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}","C:\\Users\\italo\\Desktop\\netflixclone\\src\\components\\Header.js",["43"],[],"import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black}) => {\r\n    return(\r\n        <header className={black ? 'black' : ''}>\r\n             <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/799px-Netflix_2015_logo.svg.png\" alt=\"Netflix\"/>\r\n                </a>\r\n             </div>\r\n             <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src=\"https://ih0.redbubble.net/image.618427277.3222/flat,1000x1000,075,f.u2.jpg\" alt=\"User\"/>\r\n                </a>\r\n            </div>\r\n        </header>\r\n    );\r\n}",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":8,"column":1,"nodeType":"50","endLine":72,"endColumn":4},{"ruleId":"48","severity":1,"message":"51","line":21,"column":1,"nodeType":"50","endLine":87,"endColumn":2},{"ruleId":"48","severity":1,"message":"49","line":5,"column":1,"nodeType":"50","endLine":23,"endColumn":2},{"ruleId":"48","severity":1,"message":"49","line":4,"column":1,"nodeType":"50","endLine":37,"endColumn":2},{"ruleId":"48","severity":1,"message":"49","line":4,"column":1,"nodeType":"50","endLine":19,"endColumn":2},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]